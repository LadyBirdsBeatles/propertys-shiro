<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaochen.beatles.mapper.PayMapper">
    <resultMap id="BaseResultMap" type="com.xiaochen.beatles.pojo.Pay">
        <id column="pay_id" jdbcType="INTEGER" property="payId"/>
        <result column="pay_date" jdbcType="TIMESTAMP" property="payDate"/>
        <result column="pay_way" jdbcType="INTEGER" property="payWay"/>
        <association property="cost" resultMap="com.xiaochen.beatles.mapper.CostMapper.pay"/>
    </resultMap>
    <insert id="ccInsertPay" parameterType="Pay">
    insert into pay VALUES (null,#{cost.costId},#{payDate},#{payWay})
  </insert>

    <select id="ccSelectAll" resultMap="BaseResultMap" statementType="CALLABLE">
    call payfy(
   #{userName,mode=IN},
   #{userPhonenumber,mode=IN},
   #{page,mode=IN},
   #{limits,mode=IN},
   #{rows,mode=OUT,jdbcType=INTEGER}
   )
  </select>
    <select id="clSelectPay" resultMap="BaseResultMap" parameterType="int">
     select*from pay where pay_costid=#{id}
  </select>
    <!--与cost级联-->
    <select id="clSelectAccontPays" resultMap="BaseResultMap" statementType="CALLABLE">
call myAccountpay(
   #{uid,mode=IN},
   #{page,mode=IN},
   #{limits,mode=IN},
   #{rows,mode=OUT,jdbcType=INTEGER}
   )
  </select>
    <sql id="Base_Column_List">
    pay_id, pay_costid, pay_date, pay_way
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pay
        where pay_id = #{payId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pay
    where pay_id = #{payId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xiaochen.beatles.pojo.Pay">
    insert into pay (pay_id, pay_costid, pay_date,
      pay_way)
    values (#{payId,jdbcType=INTEGER}, #{cost.costId,jdbcType=VARCHAR}, #{payDate,jdbcType=TIMESTAMP},
      #{payWay,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.xiaochen.beatles.pojo.Pay">
        insert into pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payId != null">
                pay_id,
            </if>
            <if test="payCostid != null">
                pay_costid,
            </if>
            <if test="payDate != null">
                pay_date,
            </if>
            <if test="payWay != null">
                pay_way,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payId != null">
                #{payId,jdbcType=INTEGER},
            </if>
            <if test="payCostid != null">
                #{cost.costId,jdbcType=VARCHAR},
            </if>
            <if test="payDate != null">
                #{payDate,jdbcType=TIMESTAMP},
            </if>
            <if test="payWay != null">
                #{payWay,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaochen.beatles.pojo.Pay">
        update pay
        <set>
            <if test="payCostid != null">
                pay_costid = #{payCostid,jdbcType=VARCHAR},
            </if>
            <if test="payDate != null">
                pay_date = #{payDate,jdbcType=DATE},
            </if>
            <if test="payWay != null">
                pay_way = #{payWay,jdbcType=INTEGER},
            </if>
        </set>
        where pay_id = #{payId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaochen.beatles.pojo.Pay">
    update pay
    set pay_costid = #{payCostid,jdbcType=VARCHAR},
      pay_date = #{payDate,jdbcType=DATE},
      pay_way = #{payWay,jdbcType=INTEGER}
    where pay_id = #{payId,jdbcType=INTEGER}
  </update>
</mapper>