<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaochen.beatles.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.xiaochen.beatles.pojo.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_phonenumber" jdbcType="VARCHAR" property="userPhoneNumber"/>
        <result column="user_dress" jdbcType="VARCHAR" property="userDress"/>
        <result column="user_size" jdbcType="VARCHAR" property="userSize"/>
        <result column="user_type" jdbcType="INTEGER" property="userType"/>
        <result column="user_auth" jdbcType="INTEGER" property="userAuth"/>
    </resultMap>
    <!--<cache/>-->
    <select id="ccSelectById" resultMap="BaseResultMap" parameterType="int">
    select * from user where user_id=#{id} and user_auth=3
  </select>

    <select id="ccSelectByUser" resultMap="BaseResultMap" parameterType="User">
    select * from user where user_phonenumber=#{userPhoneNumber} and user_auth=3
  </select>

    <select id="ccSelectAll" resultMap="BaseResultMap" statementType="CALLABLE">
   call userfy(
   #{userName,mode=IN},
   #{page,mode=IN},
   #{limits,mode=IN},
   #{rows,mode=OUT,jdbcType=INTEGER}
   )
  </select>

    <insert id="ccInsert" parameterType="User">
    insert into user VALUES (null,#{userName},#{userPassword},#{userPhoneNumber},#{userDress},#{userSize},#{userType},#{userAuth})
  </insert>

    <update id="ccUpdate" parameterType="User">
    update user set user_name=#{userName},user_phonenumber=#{userPhoneNumber},
    user_dress=#{userDress},user_size=#{userSize} where user_id=#{userId}
  </update>

    <update id="ccDelete">
        update user set user_type=1 where user_id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    <!--select*from user where user_id = #{userId,jdbcType=INTEGER}-->
    <select id="selectUser" resultMap="BaseResultMap" statementType="CALLABLE">
     call cuser(
   #{uid,mode=IN},
   #{page,mode=IN},
   #{limits,mode=IN},
   #{rows,mode=OUT,jdbcType=INTEGER}
   )
    </select>
    <update id="updatepassword" parameterType="com.xiaochen.beatles.pojo.User">
    update user
    set user_password = #{userPassword,jdbcType=VARCHAR},
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xiaochen.beatles.pojo.User">
    insert into user (user_id, user_name, user_password,
      user_phonenumber, user_dress, user_size,
      user_type)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{userPhoneNumber,jdbcType=VARCHAR}, #{userDress,jdbcType=VARCHAR}, #{userSize,jdbcType=VARCHAR},
      #{userType,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.xiaochen.beatles.pojo.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userPhoneNumber != null">
                user_phonenumber,
            </if>
            <if test="userDress != null">
                user_dress,
            </if>
            <if test="userSize != null">
                user_size,
            </if>
            <if test="userType != null">
                user_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userPhoneNumber != null">
                #{userPhoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="userDress != null">
                #{userDress,jdbcType=VARCHAR},
            </if>
            <if test="userSize != null">
                #{userSize,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaochen.beatles.pojo.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userPhoneNumber != null">
                user_phonenumber = #{userPhoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="userDress != null">
                user_dress = #{userDress,jdbcType=VARCHAR},
            </if>
            <if test="userSize != null">
                user_size = #{userSize,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="userAuth != null">
                user_auth = #{userType,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaochen.beatles.pojo.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_phonenumber = #{userPhoneNumber,jdbcType=VARCHAR},
      user_dress = #{userDress,jdbcType=VARCHAR},
      user_size = #{userSize,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

    <select id="selectUserh" parameterType="com.xiaochen.beatles.pojo.User" resultMap="BaseResultMap">
        select * from user
        <where>
            <if test="userName != null">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="userPassword != null">
                and user_password = #{userPassword,jdbcType=VARCHAR}
            </if>
            <if test="userPhoneNumber != null">
                and user_phonenumber = #{userPhoneNumber,jdbcType=VARCHAR}
            </if>
            <if test="userDress != null">
                and user_dress = #{userDress,jdbcType=VARCHAR}
            </if>
            <if test="userSize != null">
                and user_size = #{userSize,jdbcType=VARCHAR}
            </if>
            <if test="userType != null">
                and user_type = #{userType,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="getUser" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from user
    where
    user_name = #{username,jdbcType=INTEGER}
  </select>
    <select id="getUserByphone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from user
    where
    user_phonenumber = #{phoneNumber,jdbcType=INTEGER}
  </select>

    <update id="updateByPhone" parameterType="com.xiaochen.beatles.pojo.User">
    update user
    set
      user_password = #{userPassword,jdbcType=VARCHAR},
    where user_phonenumber = #{userPhoneNumber,jdbcType=INTEGER}
  </update>
</mapper>